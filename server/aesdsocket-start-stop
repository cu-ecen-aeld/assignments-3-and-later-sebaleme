#!/bin/sh
# Script to manage aesdsocket daemon
# start-stop-daemon checks the existing process before launching a new deamon
# so it is safer than directly starting your executable
# Current implementation allows an autostart/stop if script is under /etc/init.d/

NAME=aesdsocket
DAEMON_OPTS="-d"
PIDFILE=/var/run/$NAME.pid

if [ "$(uname -m)" = "aarch64" ]; then
    DAEMON="/usr/bin/aesdsocket"
elif [ "$(uname -m)" = "x86_64" ]; then
    DAEMON="$HOME/workspace/assignments-3-and-later-sebaleme/server/aesdsocket"
else
    echo "Unsupported architecture"
    exit 1
fi

echo "ARCH_DIR is set to: $DAEMON"

# Check if char device is available
if [ -e /dev/aesdchar ]; then
    echo "Device node /dev/aesdchar exists:"
    ls -ll /dev/aesdchar
else
    echo "Device node /dev/aesdchar does not exist."
fi


case "$1" in
  start)
        echo -n "Starting daemon: "$NAME
	    start-stop-daemon --start --quiet --exec $DAEMON -- $DAEMON_OPTS
        echo "."
	    ;;
  stop)
        PID=$(ps -ef | grep $NAME | grep -v grep | awk '{print $2}')
        kill $PID
        echo -n "Stopping daemon: "$NAME " with PID "$PID
        echo "."
	    ;;
  restart)
        echo -n "Restarting daemon: "$NAME
        start-stop-daemon --stop --quiet --oknodo --retry 30
        start-stop-daemon --start --quiet --exec $DAEMON -- $DAEMON_OPTS
        echo "."
        ;;

  *)
        echo "Usage: "$1" {start|stop|restart}"
        exit 1
esac

exit 0
